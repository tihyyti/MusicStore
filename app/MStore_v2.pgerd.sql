-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS mstore_v1.customer
(
    id serial NOT NULL,
    store_id integer NOT NULL,
    custoname character varying(50) STORAGE PLAIN COLLATE pg_catalog."default" NOT NULL,
    custoemail character varying(50) STORAGE PLAIN COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    custophone character varying(20) STORAGE PLAIN COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    custostatus boolean DEFAULT false,
    custoblocked boolean DEFAULT false,
    last_login date,
    custopassw character varying(80) STORAGE PLAIN COLLATE pg_catalog."default",
    CONSTRAINT customer_pkey PRIMARY KEY (id),
    CONSTRAINT customer_custoname_key UNIQUE (custoname)
);

COMMENT ON COLUMN mstore_v1.customer.last_login
    IS 'Last login DATE for the customer.';

COMMENT ON COLUMN mstore_v1.customer.custopassw
    IS 'customer password';

CREATE TABLE IF NOT EXISTS mstore_v1.product
(
    id serial NOT NULL,
    productgroup_id integer NOT NULL,
    productcampaignflag boolean DEFAULT false,
    productname character varying(100) COLLATE pg_catalog."default" NOT NULL,
    productdetails text COLLATE pg_catalog."default",
    productimage_id integer,
    productsinstore integer,
    productsreserved integer,
    producpurchprice numeric(10, 2) DEFAULT 0.00,
    productsalesprice numeric(10, 2) DEFAULT 0.00,
    productcampaignprice numeric(10, 2) DEFAULT 0.00,
    productdiscount numeric(10, 2) DEFAULT 0.00,
    dailysales numeric(10, 2) DEFAULT 0.00,
    dailydiscounts numeric(10, 2) DEFAULT 0.00,
    dailytaxes numeric(10, 2) DEFAULT 0.00,
    monthlysales numeric(10, 2) DEFAULT 0.00,
    monthlydiscounts numeric(10, 2) DEFAULT 0.00,
    monthlytaxes numeric(10, 2) DEFAULT 0.00,
    productcampaignstart timestamp without time zone NOT NULL,
    productcampaignend timestamp without time zone NOT NULL,
    productcreated timestamp without time zone NOT NULL,
    productedited timestamp without time zone NOT NULL,
    CONSTRAINT product_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS mstore_v1.productgroup
(
    id serial NOT NULL,
    store_id integer NOT NULL,
    prodgroupname character varying(80) COLLATE pg_catalog."default" NOT NULL,
    prodgrdiscount numeric(10, 2) DEFAULT 0.00,
    prodgrvatpercent numeric(10, 2) DEFAULT 0.00,
    monthlysales_01 numeric(10, 2) DEFAULT 0.00,
    monthlydiscounts_01 numeric(10, 2) DEFAULT 0.00,
    monthlytaxes_01 numeric(10, 2) DEFAULT 0.00,
    monthlysales_02 numeric(10, 2) DEFAULT 0.00,
    monthlydiscounts_02 numeric(10, 2) DEFAULT 0.00,
    monthlytaxes_02 numeric(10, 2) DEFAULT 0.00,
    monthlysales_12 numeric(10, 2) DEFAULT 0.00,
    monthlydiscounts_12 numeric(10, 2) DEFAULT 0.00,
    monthlytaxes_12 numeric(10, 2) DEFAULT 0.00,
    CONSTRAINT productgroup_pkey PRIMARY KEY (id),
    CONSTRAINT productgroup_prodgroupname_key UNIQUE (prodgroupname)
);

CREATE TABLE IF NOT EXISTS mstore_v1.productimage
(
    id serial NOT NULL,
    prodimagename character varying(60) COLLATE pg_catalog."default" NOT NULL,
    prodimagetype character varying(4) COLLATE pg_catalog."default" DEFAULT '.PNG'::character varying,
    prodimagereshori integer NOT NULL,
    prodimageresvert integer NOT NULL,
    prodimage_url character varying(120) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT productimage_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS mstore_v1.shoppingcart
(
    id serial NOT NULL,
    cartstore_id integer NOT NULL,
    cartcustomer_id integer NOT NULL,
    cartstatus boolean DEFAULT false,
    cartvat double precision DEFAULT 0.00,
    cartdiscount double precision DEFAULT 0.00,
    carttotal double precision DEFAULT 0.00,
    cartcurrenttime timestamp without time zone NOT NULL,
    carteditedtime timestamp without time zone NOT NULL,
    cartpurchasedtime timestamp without time zone NOT NULL,
    cartdeliverytime timestamp without time zone NOT NULL,
    CONSTRAINT shoppingcart_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS mstore_v1.shoppingcartproduct
(
    cart_id integer NOT NULL,
    product_id integer NOT NULL,
    quantity integer DEFAULT 1,
    CONSTRAINT shoppingcartproduct_pkey PRIMARY KEY (cart_id, product_id)
);

CREATE TABLE IF NOT EXISTS mstore_v1.store
(
    id serial NOT NULL,
    storemanagername character varying(50) STORAGE PLAIN COLLATE pg_catalog."default" NOT NULL,
    storename character varying(40) STORAGE PLAIN COLLATE pg_catalog."default" NOT NULL,
    storetaxid character varying(16) STORAGE PLAIN COLLATE pg_catalog."default" NOT NULL,
    storephone character varying(20) STORAGE PLAIN COLLATE pg_catalog."default" NOT NULL,
    storeemail character varying(25) STORAGE PLAIN COLLATE pg_catalog."default" NOT NULL,
    storeaddress character varying(40) STORAGE PLAIN COLLATE pg_catalog."default" NOT NULL,
    storelogourl character varying(140) STORAGE PLAIN COLLATE pg_catalog."default" DEFAULT NULL::character varying,
    storemanager_id integer,
    last_login date,
    storemanagerpassw character varying(80) STORAGE PLAIN COLLATE pg_catalog."default",
    CONSTRAINT store_pkey PRIMARY KEY (id),
    CONSTRAINT store_storeaddress_key UNIQUE (storeaddress),
    CONSTRAINT store_storeemail_key UNIQUE (storeemail),
    CONSTRAINT store_storemanagername_key UNIQUE (storemanagername),
    CONSTRAINT store_storephone_key UNIQUE (storephone),
    CONSTRAINT store_storetaxid_key UNIQUE (storetaxid)
);

COMMENT ON COLUMN mstore_v1.store.last_login
    IS 'Last login date of the storemanager.';

COMMENT ON COLUMN mstore_v1.store.storemanagerpassw
    IS 'hashed password';

ALTER TABLE IF EXISTS mstore_v1.customer
    ADD CONSTRAINT fk_customer_to_store FOREIGN KEY (store_id)
    REFERENCES mstore_v1.store (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS mstore_v1.product
    ADD CONSTRAINT fk_product_to_productgroup FOREIGN KEY (productgroup_id)
    REFERENCES mstore_v1.productgroup (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS mstore_v1.product
    ADD CONSTRAINT fk_product_to_productimage FOREIGN KEY (productimage_id)
    REFERENCES mstore_v1.productimage (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS mstore_v1.productgroup
    ADD CONSTRAINT fk_prodgroup_to_store FOREIGN KEY (store_id)
    REFERENCES mstore_v1.store (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS mstore_v1.shoppingcart
    ADD CONSTRAINT fk_cart_to_customer FOREIGN KEY (cartcustomer_id)
    REFERENCES mstore_v1.customer (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

COMMENT ON CONSTRAINT fk_cart_to_customer ON mstore_v1.shoppingcart
    IS 'FK from shoppingcart to customer.';

CREATE INDEX IF NOT EXISTS idx_shoppingcart_cartcustomer_id
    ON mstore_v1.shoppingcart(cartcustomer_id);


ALTER TABLE IF EXISTS mstore_v1.shoppingcart
    ADD CONSTRAINT fk_cart_to_store FOREIGN KEY (cartstore_id)
    REFERENCES mstore_v1.store (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS mstore_v1.shoppingcartproduct
    ADD CONSTRAINT shoppingcartproduct_cart_id_fkey FOREIGN KEY (cart_id)
    REFERENCES mstore_v1.shoppingcart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_shoppingcartproduct_cart_id
    ON mstore_v1.shoppingcartproduct(cart_id);


ALTER TABLE IF EXISTS mstore_v1.shoppingcartproduct
    ADD CONSTRAINT shoppingcartproduct_product_id_fkey FOREIGN KEY (product_id)
    REFERENCES mstore_v1.product (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS idx_shoppingcartproduct_product_id
    ON mstore_v1.shoppingcartproduct(product_id);

END;